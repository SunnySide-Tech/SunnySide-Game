<html>
	<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<style>
		canvas {
			border:1px solid #d3d3d3;
			background-color: #f1f1f1;
		}
		button {
						margin:13px;
						color:black;
						height:40px;
						width: 40px;
						background-color:lightblue;
						padding: 14px 20px;
					
		}
		</style>
	</head>
<body onload="startGame()">
<script>

	var myDog; 
	var obstacles= [];
	
		//var a = Math.floor((Math.random() * 300) + 100);
		//var b = Math.floor((Math.random() * 30) + 10);
		//var c = Math.floor((Math.random() * 30) + 10);
		//var d = Math.floor((Math.random() * 300) + 100);
	
	
	
	function startGame() {
		myDog = new component(30, 30, "doggo1.png", 10, 120, "image");
		myGameArea.start();
		//obstacles  = new component(300, 30, "rock.png", 10, 120, "image");  
	}

	var myGameArea = {
		canvas : document.createElement("canvas"),
		start : function() {
			this.canvas.width = 1240;
			this.canvas.height = 700;
			this.context = this.canvas.getContext("2d");			
			document.body.insertBefore(this.canvas, document.body.childNodes[0]);
			this.frameNo = 0;
			this.interval = setInterval(updateGameArea, 20);
		},
		clear : function() {
			this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
		},
		stop : function() {
			clearInterval(this.interval);
		}
	}

	function component(width, height, color, x, y, type) {
		this.type = type;
		if (type == "image") {
			this.image = new Image();
			this.image.src = color;
		}
		this.width = width;
		this.height = height;
		this.speedX = 0;
		this.speedY = 0;    
		this.x = x;
		this.y = y;    
		this.update = function() {
			ctx = myGameArea.context;
			if (type == "image") {
				ctx.drawImage(this.image, 
					this.x, 
					this.y,
					this.width, this.height);
			} else {
				ctx.fillStyle = color;
				ctx.fillRect(this.x, this.y, this.width, this.height);
			}
		}
		this.newPos = function() {
			this.x += this.speedX;
			this.y += this.speedY;        
		}
		this.crashWith = function(otherobj) {
			var myleft = this.x;
			var myright = this.x + (this.width);
			var mytop = this.y;
			var mybottom = this.y + (this.height);
			var otherleft = otherobj.x;
			var otherright = otherobj.x + (otherobj.width);
			var othertop = otherobj.y;
			var otherbottom = otherobj.y + (otherobj.height);
			var crash = true;
			if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
				crash = false;
			}
			return crash;
		}
	}
	function updateGameArea() {
	var minGap, maxGap, x, gap, height,minHeight, maxHeight;
		if (myDog.crashWith(obstacles)) {
        myGameArea.stop();
		alert("you died!");
		} else {
			myGameArea.clear();
			obstacles.update();
			myDog.x += myDog.speedX;
			myDog.y += myDog.speedY;    
			myDog.update();
		}
		    myGameArea.clear();
		    myGameArea.frameNo += 1;
    if (myGameArea.frameNo == 1 || everyinterval(150)) {
        x = myGameArea.canvas.width;
        minGap = 50;
        maxGap = 200;
        gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
		minHeight = 20;
        maxHeight = 200;
        height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
        obstacles.push(new component(10, height, "green", x, 0));
        obstacles.push(new component(10, x - height - gap, "green", x, height + gap));
    }
		for (i = 0; i < obstacles.length; i += 1) {
        obstacles[i].x += -1;
        obstacles[i].update();
		}
		myDog.newPos();    
		myDog.update();
	}
	
	function everyinterval(n) {
    if ((myGameArea.frameNo / n) % 1 == 0) {return true;}
    return false;
}
	function moveup() {
		myDog.speedY -= 1; 
	}

	function movedown() {
		myDog.speedY += 1; 
	}

	function moveleft() {
		myDog.speedX -= 1; 
	}

	function moveright() {
		myDog.speedX += 1; 
	}
	document.onkeydown = function(evt) { 
	evt = evt || window.event; 
	switch (evt.keyCode) { 
	case 37:
	 moveleft(); break; 
	case 38:
	moveup(); break;
	case 39:
	moveright(); break; 
	case 40:
	movedown(); break;
	} };

</script>
<div style="text-align:center;width:480px;">
</div>


</body>
</html>
